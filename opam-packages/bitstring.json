{
  "versions": {
    "2.1.0": {
      "version": "2.1.0", 
      "opam": {
        "url": "https://github.com/xguerin/bitstring/archive/v2.1.0.tar.gz", 
        "checksum": "722f402be066ee36e963e80eb9db1962", 
        "files": [
          {
            "content": "commit 5997a66d9b078d75f821eedc9ba615c9df321e98\nAuthor: Richard W.M. Jones <rich@annexia.org>\nDate:   Wed Jul 30 20:02:02 2014 +0000\n\n    Stop using allocation trick in fastpath functions (OCaml 4.02).\n    \n    In OCaml 4.02, there is a new compiler optimization which means we can\n    no longer rely on the trick of passing in a newly allocated `zero'\n    (ie. Int32.zero or Int64.zero) to our fastpath noalloc functions.\n    \n    Instead we have to turn these into regular functions, which means they\n    may be a bit slower.\n\ndiff --git a/bitstring.ml b/bitstring.ml\nindex bc29a41..4f4ed2c 100644\n--- a/bitstring.ml\n+++ b/bitstring.ml\n@@ -751,67 +751,67 @@ external extract_fastpath_int24_le_signed : string -> int -> int = \"ocaml_bitstr\n external extract_fastpath_int24_ne_signed : string -> int -> int = \"ocaml_bitstring_extract_fastpath_int24_ne_signed\" \"noalloc\"\n *)\n \n-external extract_fastpath_int32_be_unsigned : string -> int -> int32 -> int32 = \"ocaml_bitstring_extract_fastpath_int32_be_unsigned\" \"noalloc\"\n+external extract_fastpath_int32_be_unsigned : string -> int -> int32 = \"ocaml_bitstring_extract_fastpath_int32_be_unsigned\"\n \n-external extract_fastpath_int32_le_unsigned : string -> int -> int32 -> int32 = \"ocaml_bitstring_extract_fastpath_int32_le_unsigned\" \"noalloc\"\n+external extract_fastpath_int32_le_unsigned : string -> int -> int32 = \"ocaml_bitstring_extract_fastpath_int32_le_unsigned\"\n \n-external extract_fastpath_int32_ne_unsigned : string -> int -> int32 -> int32 = \"ocaml_bitstring_extract_fastpath_int32_ne_unsigned\" \"noalloc\"\n+external extract_fastpath_int32_ne_unsigned : string -> int -> int32 = \"ocaml_bitstring_extract_fastpath_int32_ne_unsigned\"\n \n-external extract_fastpath_int32_be_signed : string -> int -> int32 -> int32 = \"ocaml_bitstring_extract_fastpath_int32_be_signed\" \"noalloc\"\n+external extract_fastpath_int32_be_signed : string -> int -> int32 = \"ocaml_bitstring_extract_fastpath_int32_be_signed\"\n \n-external extract_fastpath_int32_le_signed : string -> int -> int32 -> int32 = \"ocaml_bitstring_extract_fastpath_int32_le_signed\" \"noalloc\"\n+external extract_fastpath_int32_le_signed : string -> int -> int32 = \"ocaml_bitstring_extract_fastpath_int32_le_signed\"\n \n-external extract_fastpath_int32_ne_signed : string -> int -> int32 -> int32 = \"ocaml_bitstring_extract_fastpath_int32_ne_signed\" \"noalloc\"\n+external extract_fastpath_int32_ne_signed : string -> int -> int32 = \"ocaml_bitstring_extract_fastpath_int32_ne_signed\"\n \n (*\n-external extract_fastpath_int40_be_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int40_be_unsigned\" \"noalloc\"\n+external extract_fastpath_int40_be_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int40_be_unsigned\"\n \n-external extract_fastpath_int40_le_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int40_le_unsigned\" \"noalloc\"\n+external extract_fastpath_int40_le_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int40_le_unsigned\"\n \n-external extract_fastpath_int40_ne_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int40_ne_unsigned\" \"noalloc\"\n+external extract_fastpath_int40_ne_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int40_ne_unsigned\"\n \n-external extract_fastpath_int40_be_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int40_be_signed\" \"noalloc\"\n+external extract_fastpath_int40_be_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int40_be_signed\"\n \n-external extract_fastpath_int40_le_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int40_le_signed\" \"noalloc\"\n+external extract_fastpath_int40_le_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int40_le_signed\"\n \n-external extract_fastpath_int40_ne_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int40_ne_signed\" \"noalloc\"\n+external extract_fastpath_int40_ne_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int40_ne_signed\"\n \n-external extract_fastpath_int48_be_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int48_be_unsigned\" \"noalloc\"\n+external extract_fastpath_int48_be_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int48_be_unsigned\"\n \n-external extract_fastpath_int48_le_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int48_le_unsigned\" \"noalloc\"\n+external extract_fastpath_int48_le_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int48_le_unsigned\"\n \n-external extract_fastpath_int48_ne_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int48_ne_unsigned\" \"noalloc\"\n+external extract_fastpath_int48_ne_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int48_ne_unsigned\"\n \n-external extract_fastpath_int48_be_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int48_be_signed\" \"noalloc\"\n+external extract_fastpath_int48_be_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int48_be_signed\"\n \n-external extract_fastpath_int48_le_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int48_le_signed\" \"noalloc\"\n+external extract_fastpath_int48_le_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int48_le_signed\"\n \n-external extract_fastpath_int48_ne_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int48_ne_signed\" \"noalloc\"\n+external extract_fastpath_int48_ne_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int48_ne_signed\"\n \n-external extract_fastpath_int56_be_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int56_be_unsigned\" \"noalloc\"\n+external extract_fastpath_int56_be_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int56_be_unsigned\"\n \n-external extract_fastpath_int56_le_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int56_le_unsigned\" \"noalloc\"\n+external extract_fastpath_int56_le_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int56_le_unsigned\"\n \n-external extract_fastpath_int56_ne_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int56_ne_unsigned\" \"noalloc\"\n+external extract_fastpath_int56_ne_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int56_ne_unsigned\"\n \n-external extract_fastpath_int56_be_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int56_be_signed\" \"noalloc\"\n+external extract_fastpath_int56_be_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int56_be_signed\"\n \n-external extract_fastpath_int56_le_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int56_le_signed\" \"noalloc\"\n+external extract_fastpath_int56_le_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int56_le_signed\"\n \n-external extract_fastpath_int56_ne_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int56_ne_signed\" \"noalloc\"\n+external extract_fastpath_int56_ne_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int56_ne_signed\"\n *)\n \n-external extract_fastpath_int64_be_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int64_be_unsigned\" \"noalloc\"\n+external extract_fastpath_int64_be_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int64_be_unsigned\"\n \n-external extract_fastpath_int64_le_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int64_le_unsigned\" \"noalloc\"\n+external extract_fastpath_int64_le_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int64_le_unsigned\"\n \n-external extract_fastpath_int64_ne_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int64_ne_unsigned\" \"noalloc\"\n+external extract_fastpath_int64_ne_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int64_ne_unsigned\"\n \n-external extract_fastpath_int64_be_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int64_be_signed\" \"noalloc\"\n+external extract_fastpath_int64_be_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int64_be_signed\"\n \n-external extract_fastpath_int64_le_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int64_le_signed\" \"noalloc\"\n+external extract_fastpath_int64_le_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int64_le_signed\"\n \n-external extract_fastpath_int64_ne_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int64_ne_signed\" \"noalloc\"\n+external extract_fastpath_int64_ne_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int64_ne_signed\"\n \n (*----------------------------------------------------------------------*)\n (* Constructor functions. *)\ndiff --git a/bitstring.mli b/bitstring.mli\nindex 501e6fb..93113c0 100644\n--- a/bitstring.mli\n+++ b/bitstring.mli\n@@ -1000,67 +1000,67 @@ external extract_fastpath_int24_le_signed : string -> int -> int = \"ocaml_bitstr\n external extract_fastpath_int24_ne_signed : string -> int -> int = \"ocaml_bitstring_extract_fastpath_int24_ne_signed\" \"noalloc\"\n *)\n \n-external extract_fastpath_int32_be_unsigned : string -> int -> int32 -> int32 = \"ocaml_bitstring_extract_fastpath_int32_be_unsigned\" \"noalloc\"\n+external extract_fastpath_int32_be_unsigned : string -> int -> int32 = \"ocaml_bitstring_extract_fastpath_int32_be_unsigned\"\n \n-external extract_fastpath_int32_le_unsigned : string -> int -> int32 -> int32 = \"ocaml_bitstring_extract_fastpath_int32_le_unsigned\" \"noalloc\"\n+external extract_fastpath_int32_le_unsigned : string -> int -> int32 = \"ocaml_bitstring_extract_fastpath_int32_le_unsigned\"\n \n-external extract_fastpath_int32_ne_unsigned : string -> int -> int32 -> int32 = \"ocaml_bitstring_extract_fastpath_int32_ne_unsigned\" \"noalloc\"\n+external extract_fastpath_int32_ne_unsigned : string -> int -> int32 = \"ocaml_bitstring_extract_fastpath_int32_ne_unsigned\"\n \n-external extract_fastpath_int32_be_signed : string -> int -> int32 -> int32 = \"ocaml_bitstring_extract_fastpath_int32_be_signed\" \"noalloc\"\n+external extract_fastpath_int32_be_signed : string -> int -> int32 = \"ocaml_bitstring_extract_fastpath_int32_be_signed\"\n \n-external extract_fastpath_int32_le_signed : string -> int -> int32 -> int32 = \"ocaml_bitstring_extract_fastpath_int32_le_signed\" \"noalloc\"\n+external extract_fastpath_int32_le_signed : string -> int -> int32 = \"ocaml_bitstring_extract_fastpath_int32_le_signed\"\n \n-external extract_fastpath_int32_ne_signed : string -> int -> int32 -> int32 = \"ocaml_bitstring_extract_fastpath_int32_ne_signed\" \"noalloc\"\n+external extract_fastpath_int32_ne_signed : string -> int -> int32 = \"ocaml_bitstring_extract_fastpath_int32_ne_signed\"\n \n (*\n-external extract_fastpath_int40_be_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int40_be_unsigned\" \"noalloc\"\n+external extract_fastpath_int40_be_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int40_be_unsigned\"\n \n-external extract_fastpath_int40_le_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int40_le_unsigned\" \"noalloc\"\n+external extract_fastpath_int40_le_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int40_le_unsigned\"\n \n-external extract_fastpath_int40_ne_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int40_ne_unsigned\" \"noalloc\"\n+external extract_fastpath_int40_ne_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int40_ne_unsigned\"\n \n-external extract_fastpath_int40_be_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int40_be_signed\" \"noalloc\"\n+external extract_fastpath_int40_be_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int40_be_signed\"\n \n-external extract_fastpath_int40_le_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int40_le_signed\" \"noalloc\"\n+external extract_fastpath_int40_le_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int40_le_signed\"\n \n-external extract_fastpath_int40_ne_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int40_ne_signed\" \"noalloc\"\n+external extract_fastpath_int40_ne_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int40_ne_signed\"\n \n-external extract_fastpath_int48_be_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int48_be_unsigned\" \"noalloc\"\n+external extract_fastpath_int48_be_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int48_be_unsigned\"\n \n-external extract_fastpath_int48_le_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int48_le_unsigned\" \"noalloc\"\n+external extract_fastpath_int48_le_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int48_le_unsigned\"\n \n-external extract_fastpath_int48_ne_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int48_ne_unsigned\" \"noalloc\"\n+external extract_fastpath_int48_ne_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int48_ne_unsigned\"\n \n-external extract_fastpath_int48_be_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int48_be_signed\" \"noalloc\"\n+external extract_fastpath_int48_be_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int48_be_signed\"\n \n-external extract_fastpath_int48_le_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int48_le_signed\" \"noalloc\"\n+external extract_fastpath_int48_le_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int48_le_signed\"\n \n-external extract_fastpath_int48_ne_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int48_ne_signed\" \"noalloc\"\n+external extract_fastpath_int48_ne_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int48_ne_signed\"\n \n-external extract_fastpath_int56_be_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int56_be_unsigned\" \"noalloc\"\n+external extract_fastpath_int56_be_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int56_be_unsigned\"\n \n-external extract_fastpath_int56_le_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int56_le_unsigned\" \"noalloc\"\n+external extract_fastpath_int56_le_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int56_le_unsigned\"\n \n-external extract_fastpath_int56_ne_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int56_ne_unsigned\" \"noalloc\"\n+external extract_fastpath_int56_ne_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int56_ne_unsigned\"\n \n-external extract_fastpath_int56_be_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int56_be_signed\" \"noalloc\"\n+external extract_fastpath_int56_be_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int56_be_signed\"\n \n-external extract_fastpath_int56_le_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int56_le_signed\" \"noalloc\"\n+external extract_fastpath_int56_le_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int56_le_signed\"\n \n-external extract_fastpath_int56_ne_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int56_ne_signed\" \"noalloc\"\n+external extract_fastpath_int56_ne_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int56_ne_signed\"\n *)\n \n-external extract_fastpath_int64_be_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int64_be_unsigned\" \"noalloc\"\n+external extract_fastpath_int64_be_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int64_be_unsigned\"\n \n-external extract_fastpath_int64_le_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int64_le_unsigned\" \"noalloc\"\n+external extract_fastpath_int64_le_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int64_le_unsigned\"\n \n-external extract_fastpath_int64_ne_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int64_ne_unsigned\" \"noalloc\"\n+external extract_fastpath_int64_ne_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int64_ne_unsigned\"\n \n-external extract_fastpath_int64_be_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int64_be_signed\" \"noalloc\"\n+external extract_fastpath_int64_be_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int64_be_signed\"\n \n-external extract_fastpath_int64_le_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int64_le_signed\" \"noalloc\"\n+external extract_fastpath_int64_le_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int64_le_signed\"\n \n-external extract_fastpath_int64_ne_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int64_ne_signed\" \"noalloc\"\n+external extract_fastpath_int64_ne_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int64_ne_signed\"\n \n (* 'construct' functions are used in BITSTRING constructors. *)\n val construct_bit : Buffer.t -> bool -> int -> exn -> unit\ndiff --git a/bitstring_c.c b/bitstring_c.c\nindex b9ad109..3ea2547 100644\n--- a/bitstring_c.c\n+++ b/bitstring_c.c\n@@ -33,6 +33,8 @@\n \n #include <caml/mlvalues.h>\n #include <caml/fail.h>\n+#include <caml/memory.h>\n+#include <caml/alloc.h>\n \n /* Fastpath functions.  These are used in the common case for reading\n  * ints where the following conditions are known to be true:\n@@ -40,10 +42,10 @@\n  * (b) the access in the match is byte-aligned\n  * (c) the access in the underlying bitstring is byte-aligned\n  *\n- * These functions are all \"noalloc\" meaning they must not perform\n- * any OCaml allocations.  For this reason, when the function returns\n- * an int32 or int64, the OCaml code passes in the pre-allocated pointer\n- * to the return value.\n+ * These functions used to all be \"noalloc\" meaning they must not\n+ * perform any OCaml allocations.  However starting with OCaml 4.02, a\n+ * compiler optimization means that unforunately we now have to use\n+ * ordinary alloc functions in some cases.\n  *\n  * The final offset in the string is calculated by the OCaml (caller)\n  * code.  All we need to do is to read the string+offset and byteswap,\n@@ -87,52 +89,31 @@ fastpath1(16,be,signed,int16_t)\n fastpath1(16,le,signed,int16_t)\n fastpath1(16,ne,signed,int16_t)\n \n-#define fastpath2(size,endian,signed,type,rval)\t\t\t\t\\\n-  CAMLprim value\t\t\t\t\t\t\t\\\n-  ocaml_bitstring_extract_fastpath_int##size##_##endian##_##signed\t\\\n-  (value strv, value offv, value rv)\t\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    type *ptr = (type *) ((void *) String_val (strv) + Int_val (offv));\t\\\n-    type r;\t\t\t\t\t\t\t\t\\\n-    memcpy(&r, ptr, sizeof(r));\t\t\t\t\t\\\n-    swap_##endian(size,r);\t\t\t\t\t\t\\\n-    rval(rv) = r;\t\t\t\t\t\t\t\\\n-    return rv;\t\t\t\t\t\t\t\t\\\n-  }\n-\n-fastpath2(32,be,unsigned,uint32_t,Int32_val)\n-fastpath2(32,le,unsigned,uint32_t,Int32_val)\n-fastpath2(32,ne,unsigned,uint32_t,Int32_val)\n-fastpath2(32,be,signed,int32_t,Int32_val)\n-fastpath2(32,le,signed,int32_t,Int32_val)\n-fastpath2(32,ne,signed,int32_t,Int32_val)\n-\n-/* Special care needs to be taken on ARCH_ALIGN_INT64 platforms\n-   (hppa and sparc in Debian). */\n-\n-#ifdef ARCH_ALIGN_INT64\n-#include <caml/memory.h>\n-#include <caml/alloc.h>\n-#define fastpath3(size,endian,signed,type,rval)\t\t\t\t\\\n+#define fastpath2(size,endian,signed,type,copy)\t\t\t\t\\\n   CAMLprim value\t\t\t\t\t\t\t\\\n   ocaml_bitstring_extract_fastpath_int##size##_##endian##_##signed\t\\\n-  (value strv, value offv, value rv)\t\t\t\t\t\\\n+  (value strv, value offv)                                              \\\n   {\t\t\t\t\t\t\t\t\t\\\n+    CAMLparam2 (strv, offv);                                            \\\n+    CAMLlocal1 (rv);                                                    \\\n     type *ptr = (type *) ((void *) String_val (strv) + Int_val (offv));\t\\\n     type r;\t\t\t\t\t\t\t\t\\\n-    memcpy(&r, ptr, sizeof(r));\t\t\t\t\t\\\n+    memcpy(&r, ptr, sizeof(r));                                         \\\n     swap_##endian(size,r);\t\t\t\t\t\t\\\n-    memcpy(Data_custom_val(rv), &r, sizeof(r));\t\t\t\\\n-    return rv;\t\t\t\t\t\t\t\t\\\n+    rv = copy (r);                                                      \\\n+    CAMLreturn (rv);                                                    \\\n   }\n \n-#else\n-#define fastpath3 fastpath2\n-#endif\n+fastpath2(32,be,unsigned,uint32_t,caml_copy_int32)\n+fastpath2(32,le,unsigned,uint32_t,caml_copy_int32)\n+fastpath2(32,ne,unsigned,uint32_t,caml_copy_int32)\n+fastpath2(32,be,signed,int32_t,caml_copy_int32)\n+fastpath2(32,le,signed,int32_t,caml_copy_int32)\n+fastpath2(32,ne,signed,int32_t,caml_copy_int32)\n \n-fastpath3(64,be,unsigned,uint64_t,Int64_val)\n-fastpath3(64,le,unsigned,uint64_t,Int64_val)\n-fastpath3(64,ne,unsigned,uint64_t,Int64_val)\n-fastpath3(64,be,signed,int64_t,Int64_val)\n-fastpath3(64,le,signed,int64_t,Int64_val)\n-fastpath3(64,ne,signed,int64_t,Int64_val)\n+fastpath2(64,be,unsigned,uint64_t,caml_copy_int64)\n+fastpath2(64,le,unsigned,uint64_t,caml_copy_int64)\n+fastpath2(64,ne,unsigned,uint64_t,caml_copy_int64)\n+fastpath2(64,be,signed,int64_t,caml_copy_int64)\n+fastpath2(64,le,signed,int64_t,caml_copy_int64)\n+fastpath2(64,ne,signed,int64_t,caml_copy_int64)\ndiff --git a/pa_bitstring.ml b/pa_bitstring.ml\nindex a5f7c46..313760a 100644\n--- a/pa_bitstring.ml\n+++ b/pa_bitstring.ml\n@@ -666,17 +666,9 @@ let output_bitmatch _loc bs cases =\n \t\t  | 16 ->\n \t\t      <:expr< Bitstring.$lid:name$ $lid:data$ o >>\n \t\t  | 32 ->\n-\t\t      <:expr<\n-\t\t\t(* must allocate a new zero each time *)\n-\t\t\tlet zero = Int32.of_int 0 in\n-\t\t\tBitstring.$lid:name$ $lid:data$ o zero\n-\t\t      >>\n+\t\t      <:expr< Bitstring.$lid:name$ $lid:data$ o >>\n \t\t  | 64 ->\n-\t\t      <:expr<\n-\t\t\t(* must allocate a new zero each time *)\n-\t\t\tlet zero = Int64.of_int 0 in\n-\t\t\tBitstring.$lid:name$ $lid:data$ o zero\n-\t\t      >>\n+\t\t      <:expr< Bitstring.$lid:name$ $lid:data$ o >>\n \t\t  | _ -> assert false in\n \t\t<:expr<\n \t\t  (* Starting offset within the string. *)\n", 
            "name": "fix_402.patch"
          }, 
          {
            "content": "--- ocaml-bitstring-2.0.4.orig/Makefile.in\t2016-08-12 14:47:34.000000000 +0200\n+++ ocaml-bitstring-2.0.4/Makefile.in\t2016-08-12 14:50:51.000000000 +0200\n@@ -110,7 +110,7 @@\n \t  -I +camlp4 -pp camlp4of -c $<\n \n pa_bitstring.cmo: pa_bitstring.ml bitstring.cma bitstring_persistent.cma\n-\t$(OCAMLFIND) ocamlc bitstring.cma -I +camlp4 dynlink.cma camlp4lib.cma \\\n+\t$(OCAMLFIND) ocamlc -I +camlp4 \\\n \t  -pp camlp4of -c $< -o $@\n \n", 
            "name": "fix_404.patch"
          }
        ]
      }, 
      "esy": {
        "buildsInSource": true, 
        "build": [
          "./configure --prefix $cur__install", 
          "make srcdir=./", 
          "make install", 
          "(opam-installer --prefix=$cur__install || true)"
        ], 
        "exportedEnv": {
          "bitstring_installed": {
            "scope": "global", 
            "val": "true"
          }, 
          "bitstring_enable": {
            "scope": "global", 
            "val": "enable"
          }, 
          "bitstring_version": {
            "scope": "global", 
            "val": "2.1.0"
          }
        }
      }, 
      "dependencies": {
        "substs": "esy-ocaml/substs", 
        "@opam/ocamlfind": "build} 4.0.0 {build", 
        "opam-installer-bin": "esy-ocaml/opam-installer-bin"
      }, 
      "scripts": {}, 
      "peerDependencies": {
        "ocaml": ">= 3.10.0"
      }, 
      "name": "@opam/bitstring"
    }, 
    "2.0.4": {
      "version": "2.0.4", 
      "opam": {
        "url": "https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/bitstring/ocaml-bitstring-2.0.4.tar.gz", 
        "checksum": "5f92601000aea467c989afe141cb1632", 
        "files": [
          {
            "content": "commit 5997a66d9b078d75f821eedc9ba615c9df321e98\nAuthor: Richard W.M. Jones <rich@annexia.org>\nDate:   Wed Jul 30 20:02:02 2014 +0000\n\n    Stop using allocation trick in fastpath functions (OCaml 4.02).\n    \n    In OCaml 4.02, there is a new compiler optimization which means we can\n    no longer rely on the trick of passing in a newly allocated `zero'\n    (ie. Int32.zero or Int64.zero) to our fastpath noalloc functions.\n    \n    Instead we have to turn these into regular functions, which means they\n    may be a bit slower.\n\ndiff --git a/bitstring.ml b/bitstring.ml\nindex bc29a41..4f4ed2c 100644\n--- a/bitstring.ml\n+++ b/bitstring.ml\n@@ -751,67 +751,67 @@ external extract_fastpath_int24_le_signed : string -> int -> int = \"ocaml_bitstr\n external extract_fastpath_int24_ne_signed : string -> int -> int = \"ocaml_bitstring_extract_fastpath_int24_ne_signed\" \"noalloc\"\n *)\n \n-external extract_fastpath_int32_be_unsigned : string -> int -> int32 -> int32 = \"ocaml_bitstring_extract_fastpath_int32_be_unsigned\" \"noalloc\"\n+external extract_fastpath_int32_be_unsigned : string -> int -> int32 = \"ocaml_bitstring_extract_fastpath_int32_be_unsigned\"\n \n-external extract_fastpath_int32_le_unsigned : string -> int -> int32 -> int32 = \"ocaml_bitstring_extract_fastpath_int32_le_unsigned\" \"noalloc\"\n+external extract_fastpath_int32_le_unsigned : string -> int -> int32 = \"ocaml_bitstring_extract_fastpath_int32_le_unsigned\"\n \n-external extract_fastpath_int32_ne_unsigned : string -> int -> int32 -> int32 = \"ocaml_bitstring_extract_fastpath_int32_ne_unsigned\" \"noalloc\"\n+external extract_fastpath_int32_ne_unsigned : string -> int -> int32 = \"ocaml_bitstring_extract_fastpath_int32_ne_unsigned\"\n \n-external extract_fastpath_int32_be_signed : string -> int -> int32 -> int32 = \"ocaml_bitstring_extract_fastpath_int32_be_signed\" \"noalloc\"\n+external extract_fastpath_int32_be_signed : string -> int -> int32 = \"ocaml_bitstring_extract_fastpath_int32_be_signed\"\n \n-external extract_fastpath_int32_le_signed : string -> int -> int32 -> int32 = \"ocaml_bitstring_extract_fastpath_int32_le_signed\" \"noalloc\"\n+external extract_fastpath_int32_le_signed : string -> int -> int32 = \"ocaml_bitstring_extract_fastpath_int32_le_signed\"\n \n-external extract_fastpath_int32_ne_signed : string -> int -> int32 -> int32 = \"ocaml_bitstring_extract_fastpath_int32_ne_signed\" \"noalloc\"\n+external extract_fastpath_int32_ne_signed : string -> int -> int32 = \"ocaml_bitstring_extract_fastpath_int32_ne_signed\"\n \n (*\n-external extract_fastpath_int40_be_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int40_be_unsigned\" \"noalloc\"\n+external extract_fastpath_int40_be_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int40_be_unsigned\"\n \n-external extract_fastpath_int40_le_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int40_le_unsigned\" \"noalloc\"\n+external extract_fastpath_int40_le_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int40_le_unsigned\"\n \n-external extract_fastpath_int40_ne_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int40_ne_unsigned\" \"noalloc\"\n+external extract_fastpath_int40_ne_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int40_ne_unsigned\"\n \n-external extract_fastpath_int40_be_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int40_be_signed\" \"noalloc\"\n+external extract_fastpath_int40_be_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int40_be_signed\"\n \n-external extract_fastpath_int40_le_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int40_le_signed\" \"noalloc\"\n+external extract_fastpath_int40_le_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int40_le_signed\"\n \n-external extract_fastpath_int40_ne_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int40_ne_signed\" \"noalloc\"\n+external extract_fastpath_int40_ne_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int40_ne_signed\"\n \n-external extract_fastpath_int48_be_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int48_be_unsigned\" \"noalloc\"\n+external extract_fastpath_int48_be_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int48_be_unsigned\"\n \n-external extract_fastpath_int48_le_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int48_le_unsigned\" \"noalloc\"\n+external extract_fastpath_int48_le_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int48_le_unsigned\"\n \n-external extract_fastpath_int48_ne_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int48_ne_unsigned\" \"noalloc\"\n+external extract_fastpath_int48_ne_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int48_ne_unsigned\"\n \n-external extract_fastpath_int48_be_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int48_be_signed\" \"noalloc\"\n+external extract_fastpath_int48_be_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int48_be_signed\"\n \n-external extract_fastpath_int48_le_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int48_le_signed\" \"noalloc\"\n+external extract_fastpath_int48_le_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int48_le_signed\"\n \n-external extract_fastpath_int48_ne_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int48_ne_signed\" \"noalloc\"\n+external extract_fastpath_int48_ne_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int48_ne_signed\"\n \n-external extract_fastpath_int56_be_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int56_be_unsigned\" \"noalloc\"\n+external extract_fastpath_int56_be_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int56_be_unsigned\"\n \n-external extract_fastpath_int56_le_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int56_le_unsigned\" \"noalloc\"\n+external extract_fastpath_int56_le_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int56_le_unsigned\"\n \n-external extract_fastpath_int56_ne_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int56_ne_unsigned\" \"noalloc\"\n+external extract_fastpath_int56_ne_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int56_ne_unsigned\"\n \n-external extract_fastpath_int56_be_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int56_be_signed\" \"noalloc\"\n+external extract_fastpath_int56_be_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int56_be_signed\"\n \n-external extract_fastpath_int56_le_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int56_le_signed\" \"noalloc\"\n+external extract_fastpath_int56_le_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int56_le_signed\"\n \n-external extract_fastpath_int56_ne_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int56_ne_signed\" \"noalloc\"\n+external extract_fastpath_int56_ne_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int56_ne_signed\"\n *)\n \n-external extract_fastpath_int64_be_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int64_be_unsigned\" \"noalloc\"\n+external extract_fastpath_int64_be_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int64_be_unsigned\"\n \n-external extract_fastpath_int64_le_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int64_le_unsigned\" \"noalloc\"\n+external extract_fastpath_int64_le_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int64_le_unsigned\"\n \n-external extract_fastpath_int64_ne_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int64_ne_unsigned\" \"noalloc\"\n+external extract_fastpath_int64_ne_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int64_ne_unsigned\"\n \n-external extract_fastpath_int64_be_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int64_be_signed\" \"noalloc\"\n+external extract_fastpath_int64_be_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int64_be_signed\"\n \n-external extract_fastpath_int64_le_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int64_le_signed\" \"noalloc\"\n+external extract_fastpath_int64_le_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int64_le_signed\"\n \n-external extract_fastpath_int64_ne_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int64_ne_signed\" \"noalloc\"\n+external extract_fastpath_int64_ne_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int64_ne_signed\"\n \n (*----------------------------------------------------------------------*)\n (* Constructor functions. *)\ndiff --git a/bitstring.mli b/bitstring.mli\nindex 501e6fb..93113c0 100644\n--- a/bitstring.mli\n+++ b/bitstring.mli\n@@ -1000,67 +1000,67 @@ external extract_fastpath_int24_le_signed : string -> int -> int = \"ocaml_bitstr\n external extract_fastpath_int24_ne_signed : string -> int -> int = \"ocaml_bitstring_extract_fastpath_int24_ne_signed\" \"noalloc\"\n *)\n \n-external extract_fastpath_int32_be_unsigned : string -> int -> int32 -> int32 = \"ocaml_bitstring_extract_fastpath_int32_be_unsigned\" \"noalloc\"\n+external extract_fastpath_int32_be_unsigned : string -> int -> int32 = \"ocaml_bitstring_extract_fastpath_int32_be_unsigned\"\n \n-external extract_fastpath_int32_le_unsigned : string -> int -> int32 -> int32 = \"ocaml_bitstring_extract_fastpath_int32_le_unsigned\" \"noalloc\"\n+external extract_fastpath_int32_le_unsigned : string -> int -> int32 = \"ocaml_bitstring_extract_fastpath_int32_le_unsigned\"\n \n-external extract_fastpath_int32_ne_unsigned : string -> int -> int32 -> int32 = \"ocaml_bitstring_extract_fastpath_int32_ne_unsigned\" \"noalloc\"\n+external extract_fastpath_int32_ne_unsigned : string -> int -> int32 = \"ocaml_bitstring_extract_fastpath_int32_ne_unsigned\"\n \n-external extract_fastpath_int32_be_signed : string -> int -> int32 -> int32 = \"ocaml_bitstring_extract_fastpath_int32_be_signed\" \"noalloc\"\n+external extract_fastpath_int32_be_signed : string -> int -> int32 = \"ocaml_bitstring_extract_fastpath_int32_be_signed\"\n \n-external extract_fastpath_int32_le_signed : string -> int -> int32 -> int32 = \"ocaml_bitstring_extract_fastpath_int32_le_signed\" \"noalloc\"\n+external extract_fastpath_int32_le_signed : string -> int -> int32 = \"ocaml_bitstring_extract_fastpath_int32_le_signed\"\n \n-external extract_fastpath_int32_ne_signed : string -> int -> int32 -> int32 = \"ocaml_bitstring_extract_fastpath_int32_ne_signed\" \"noalloc\"\n+external extract_fastpath_int32_ne_signed : string -> int -> int32 = \"ocaml_bitstring_extract_fastpath_int32_ne_signed\"\n \n (*\n-external extract_fastpath_int40_be_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int40_be_unsigned\" \"noalloc\"\n+external extract_fastpath_int40_be_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int40_be_unsigned\"\n \n-external extract_fastpath_int40_le_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int40_le_unsigned\" \"noalloc\"\n+external extract_fastpath_int40_le_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int40_le_unsigned\"\n \n-external extract_fastpath_int40_ne_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int40_ne_unsigned\" \"noalloc\"\n+external extract_fastpath_int40_ne_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int40_ne_unsigned\"\n \n-external extract_fastpath_int40_be_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int40_be_signed\" \"noalloc\"\n+external extract_fastpath_int40_be_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int40_be_signed\"\n \n-external extract_fastpath_int40_le_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int40_le_signed\" \"noalloc\"\n+external extract_fastpath_int40_le_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int40_le_signed\"\n \n-external extract_fastpath_int40_ne_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int40_ne_signed\" \"noalloc\"\n+external extract_fastpath_int40_ne_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int40_ne_signed\"\n \n-external extract_fastpath_int48_be_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int48_be_unsigned\" \"noalloc\"\n+external extract_fastpath_int48_be_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int48_be_unsigned\"\n \n-external extract_fastpath_int48_le_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int48_le_unsigned\" \"noalloc\"\n+external extract_fastpath_int48_le_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int48_le_unsigned\"\n \n-external extract_fastpath_int48_ne_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int48_ne_unsigned\" \"noalloc\"\n+external extract_fastpath_int48_ne_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int48_ne_unsigned\"\n \n-external extract_fastpath_int48_be_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int48_be_signed\" \"noalloc\"\n+external extract_fastpath_int48_be_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int48_be_signed\"\n \n-external extract_fastpath_int48_le_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int48_le_signed\" \"noalloc\"\n+external extract_fastpath_int48_le_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int48_le_signed\"\n \n-external extract_fastpath_int48_ne_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int48_ne_signed\" \"noalloc\"\n+external extract_fastpath_int48_ne_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int48_ne_signed\"\n \n-external extract_fastpath_int56_be_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int56_be_unsigned\" \"noalloc\"\n+external extract_fastpath_int56_be_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int56_be_unsigned\"\n \n-external extract_fastpath_int56_le_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int56_le_unsigned\" \"noalloc\"\n+external extract_fastpath_int56_le_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int56_le_unsigned\"\n \n-external extract_fastpath_int56_ne_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int56_ne_unsigned\" \"noalloc\"\n+external extract_fastpath_int56_ne_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int56_ne_unsigned\"\n \n-external extract_fastpath_int56_be_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int56_be_signed\" \"noalloc\"\n+external extract_fastpath_int56_be_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int56_be_signed\"\n \n-external extract_fastpath_int56_le_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int56_le_signed\" \"noalloc\"\n+external extract_fastpath_int56_le_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int56_le_signed\"\n \n-external extract_fastpath_int56_ne_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int56_ne_signed\" \"noalloc\"\n+external extract_fastpath_int56_ne_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int56_ne_signed\"\n *)\n \n-external extract_fastpath_int64_be_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int64_be_unsigned\" \"noalloc\"\n+external extract_fastpath_int64_be_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int64_be_unsigned\"\n \n-external extract_fastpath_int64_le_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int64_le_unsigned\" \"noalloc\"\n+external extract_fastpath_int64_le_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int64_le_unsigned\"\n \n-external extract_fastpath_int64_ne_unsigned : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int64_ne_unsigned\" \"noalloc\"\n+external extract_fastpath_int64_ne_unsigned : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int64_ne_unsigned\"\n \n-external extract_fastpath_int64_be_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int64_be_signed\" \"noalloc\"\n+external extract_fastpath_int64_be_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int64_be_signed\"\n \n-external extract_fastpath_int64_le_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int64_le_signed\" \"noalloc\"\n+external extract_fastpath_int64_le_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int64_le_signed\"\n \n-external extract_fastpath_int64_ne_signed : string -> int -> int64 -> int64 = \"ocaml_bitstring_extract_fastpath_int64_ne_signed\" \"noalloc\"\n+external extract_fastpath_int64_ne_signed : string -> int -> int64 = \"ocaml_bitstring_extract_fastpath_int64_ne_signed\"\n \n (* 'construct' functions are used in BITSTRING constructors. *)\n val construct_bit : Buffer.t -> bool -> int -> exn -> unit\ndiff --git a/bitstring_c.c b/bitstring_c.c\nindex b9ad109..3ea2547 100644\n--- a/bitstring_c.c\n+++ b/bitstring_c.c\n@@ -33,6 +33,8 @@\n \n #include <caml/mlvalues.h>\n #include <caml/fail.h>\n+#include <caml/memory.h>\n+#include <caml/alloc.h>\n \n /* Fastpath functions.  These are used in the common case for reading\n  * ints where the following conditions are known to be true:\n@@ -40,10 +42,10 @@\n  * (b) the access in the match is byte-aligned\n  * (c) the access in the underlying bitstring is byte-aligned\n  *\n- * These functions are all \"noalloc\" meaning they must not perform\n- * any OCaml allocations.  For this reason, when the function returns\n- * an int32 or int64, the OCaml code passes in the pre-allocated pointer\n- * to the return value.\n+ * These functions used to all be \"noalloc\" meaning they must not\n+ * perform any OCaml allocations.  However starting with OCaml 4.02, a\n+ * compiler optimization means that unforunately we now have to use\n+ * ordinary alloc functions in some cases.\n  *\n  * The final offset in the string is calculated by the OCaml (caller)\n  * code.  All we need to do is to read the string+offset and byteswap,\n@@ -87,52 +89,31 @@ fastpath1(16,be,signed,int16_t)\n fastpath1(16,le,signed,int16_t)\n fastpath1(16,ne,signed,int16_t)\n \n-#define fastpath2(size,endian,signed,type,rval)\t\t\t\t\\\n-  CAMLprim value\t\t\t\t\t\t\t\\\n-  ocaml_bitstring_extract_fastpath_int##size##_##endian##_##signed\t\\\n-  (value strv, value offv, value rv)\t\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    type *ptr = (type *) ((void *) String_val (strv) + Int_val (offv));\t\\\n-    type r;\t\t\t\t\t\t\t\t\\\n-    memcpy(&r, ptr, sizeof(r));\t\t\t\t\t\\\n-    swap_##endian(size,r);\t\t\t\t\t\t\\\n-    rval(rv) = r;\t\t\t\t\t\t\t\\\n-    return rv;\t\t\t\t\t\t\t\t\\\n-  }\n-\n-fastpath2(32,be,unsigned,uint32_t,Int32_val)\n-fastpath2(32,le,unsigned,uint32_t,Int32_val)\n-fastpath2(32,ne,unsigned,uint32_t,Int32_val)\n-fastpath2(32,be,signed,int32_t,Int32_val)\n-fastpath2(32,le,signed,int32_t,Int32_val)\n-fastpath2(32,ne,signed,int32_t,Int32_val)\n-\n-/* Special care needs to be taken on ARCH_ALIGN_INT64 platforms\n-   (hppa and sparc in Debian). */\n-\n-#ifdef ARCH_ALIGN_INT64\n-#include <caml/memory.h>\n-#include <caml/alloc.h>\n-#define fastpath3(size,endian,signed,type,rval)\t\t\t\t\\\n+#define fastpath2(size,endian,signed,type,copy)\t\t\t\t\\\n   CAMLprim value\t\t\t\t\t\t\t\\\n   ocaml_bitstring_extract_fastpath_int##size##_##endian##_##signed\t\\\n-  (value strv, value offv, value rv)\t\t\t\t\t\\\n+  (value strv, value offv)                                              \\\n   {\t\t\t\t\t\t\t\t\t\\\n+    CAMLparam2 (strv, offv);                                            \\\n+    CAMLlocal1 (rv);                                                    \\\n     type *ptr = (type *) ((void *) String_val (strv) + Int_val (offv));\t\\\n     type r;\t\t\t\t\t\t\t\t\\\n-    memcpy(&r, ptr, sizeof(r));\t\t\t\t\t\\\n+    memcpy(&r, ptr, sizeof(r));                                         \\\n     swap_##endian(size,r);\t\t\t\t\t\t\\\n-    memcpy(Data_custom_val(rv), &r, sizeof(r));\t\t\t\\\n-    return rv;\t\t\t\t\t\t\t\t\\\n+    rv = copy (r);                                                      \\\n+    CAMLreturn (rv);                                                    \\\n   }\n \n-#else\n-#define fastpath3 fastpath2\n-#endif\n+fastpath2(32,be,unsigned,uint32_t,caml_copy_int32)\n+fastpath2(32,le,unsigned,uint32_t,caml_copy_int32)\n+fastpath2(32,ne,unsigned,uint32_t,caml_copy_int32)\n+fastpath2(32,be,signed,int32_t,caml_copy_int32)\n+fastpath2(32,le,signed,int32_t,caml_copy_int32)\n+fastpath2(32,ne,signed,int32_t,caml_copy_int32)\n \n-fastpath3(64,be,unsigned,uint64_t,Int64_val)\n-fastpath3(64,le,unsigned,uint64_t,Int64_val)\n-fastpath3(64,ne,unsigned,uint64_t,Int64_val)\n-fastpath3(64,be,signed,int64_t,Int64_val)\n-fastpath3(64,le,signed,int64_t,Int64_val)\n-fastpath3(64,ne,signed,int64_t,Int64_val)\n+fastpath2(64,be,unsigned,uint64_t,caml_copy_int64)\n+fastpath2(64,le,unsigned,uint64_t,caml_copy_int64)\n+fastpath2(64,ne,unsigned,uint64_t,caml_copy_int64)\n+fastpath2(64,be,signed,int64_t,caml_copy_int64)\n+fastpath2(64,le,signed,int64_t,caml_copy_int64)\n+fastpath2(64,ne,signed,int64_t,caml_copy_int64)\ndiff --git a/pa_bitstring.ml b/pa_bitstring.ml\nindex a5f7c46..313760a 100644\n--- a/pa_bitstring.ml\n+++ b/pa_bitstring.ml\n@@ -666,17 +666,9 @@ let output_bitmatch _loc bs cases =\n \t\t  | 16 ->\n \t\t      <:expr< Bitstring.$lid:name$ $lid:data$ o >>\n \t\t  | 32 ->\n-\t\t      <:expr<\n-\t\t\t(* must allocate a new zero each time *)\n-\t\t\tlet zero = Int32.of_int 0 in\n-\t\t\tBitstring.$lid:name$ $lid:data$ o zero\n-\t\t      >>\n+\t\t      <:expr< Bitstring.$lid:name$ $lid:data$ o >>\n \t\t  | 64 ->\n-\t\t      <:expr<\n-\t\t\t(* must allocate a new zero each time *)\n-\t\t\tlet zero = Int64.of_int 0 in\n-\t\t\tBitstring.$lid:name$ $lid:data$ o zero\n-\t\t      >>\n+\t\t      <:expr< Bitstring.$lid:name$ $lid:data$ o >>\n \t\t  | _ -> assert false in\n \t\t<:expr<\n \t\t  (* Starting offset within the string. *)\n", 
            "name": "fix_402.patch"
          }, 
          {
            "content": "--- ocaml-bitstring-2.0.4.orig/Makefile.in\t2016-08-12 14:47:34.000000000 +0200\n+++ ocaml-bitstring-2.0.4/Makefile.in\t2016-08-12 14:50:51.000000000 +0200\n@@ -110,7 +110,7 @@\n \t  -I +camlp4 -pp camlp4of -c $<\n \n pa_bitstring.cmo: pa_bitstring.ml bitstring.cma bitstring_persistent.cma\n-\t$(OCAMLFIND) ocamlc bitstring.cma -I +camlp4 dynlink.cma camlp4lib.cma \\\n+\t$(OCAMLFIND) ocamlc -I +camlp4 \\\n \t  -pp camlp4of -c $< -o $@\n \n", 
            "name": "fix_404.patch"
          }
        ]
      }, 
      "esy": {
        "buildsInSource": true, 
        "build": [
          "./configure --prefix $cur__install", 
          "make srcdir=./", 
          "make install", 
          "(opam-installer --prefix=$cur__install || true)"
        ], 
        "exportedEnv": {
          "bitstring_installed": {
            "scope": "global", 
            "val": "true"
          }, 
          "bitstring_enable": {
            "scope": "global", 
            "val": "enable"
          }, 
          "bitstring_version": {
            "scope": "global", 
            "val": "2.0.4"
          }
        }
      }, 
      "dependencies": {
        "substs": "esy-ocaml/substs", 
        "@opam/ocamlfind": "build} 4.0.0 {build", 
        "opam-installer-bin": "esy-ocaml/opam-installer-bin"
      }, 
      "scripts": {}, 
      "peerDependencies": {
        "ocaml": ">= 3.10.0"
      }, 
      "name": "@opam/bitstring"
    }, 
    "2.0.3": {
      "version": "2.0.3", 
      "opam": {
        "url": "https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/bitstring/ocaml-bitstring-2.0.3.tar.gz", 
        "checksum": "88ad0ee29af8b077e63896da23ec9054", 
        "files": []
      }, 
      "esy": {
        "buildsInSource": true, 
        "build": [
          "./configure --prefix $cur__install", 
          "make srcdir=./", 
          "make install", 
          "(opam-installer --prefix=$cur__install || true)"
        ], 
        "exportedEnv": {
          "bitstring_installed": {
            "scope": "global", 
            "val": "true"
          }, 
          "bitstring_enable": {
            "scope": "global", 
            "val": "enable"
          }, 
          "bitstring_version": {
            "scope": "global", 
            "val": "2.0.3"
          }
        }
      }, 
      "dependencies": {
        "substs": "esy-ocaml/substs", 
        "@opam/ocamlfind": "*", 
        "opam-installer-bin": "esy-ocaml/opam-installer-bin", 
        "@opam/camlp4": "*"
      }, 
      "scripts": {}, 
      "peerDependencies": {
        "ocaml": ">= 3.10.0 < 4.02.0"
      }, 
      "name": "@opam/bitstring"
    }
  }
}